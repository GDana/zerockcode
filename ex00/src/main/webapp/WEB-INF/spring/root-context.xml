<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	<!-- 
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:orcl"></property>
	 -->
	 
	 	<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:orcl"></property>
		
		<property name="username" value="book_ex"></property>
		<property name="password" value="book_ex"></property>
	</bean>
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- myBatis에서 가장 핵심적인 객체  'sqlSessionFactory' -->
	<!-- sqlSessionFactory > SQLSession 생성 > Connection 생성 > SQL 전달 -->
	
	<mybatis-spring:scan base-package="org.zerock.mapper" />
	<!-- SQL과 그에 대한 처리를 지정하는 Mapper, XML과 인터페이스, 어노테이션으로 작성 가능하다 -->
	<!-- 정해진 패키지를 읽어들여 myBatis 관련 인터페이스, 어노테이션을 처리한다-->
	<!-- 각각의 XML 설정도 가능하지만 번잡하기 때문에 자동으로 인식시키기 위함으로 사용된다 -->
	<!-- 하지만 SQL이 복잡하거나 길어지는 경우 XML을 이용을 지향 -->
	
</beans>
